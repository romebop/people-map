{"version":3,"sources":["App.tsx","cards/Cards.tsx","cards/PersonCard.tsx","util/parseDates.ts","reportWebVitals.ts","index.tsx"],"names":["PeopleActionType","Cards","people","hasQuery","peopleDispatch","useState","personInputValue","setPersonInputValue","id","length","map","person","className","type","placeholder","value","onChange","e","target","onClick","name","trim","ADD_PERSON","payload","disabled","title","PersonCard","inputValue","setInputValue","format","createdDate","DELETE_PERSON","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","notes","onDragEnd","result","destination","index","source","REORDER_NOTES","startIdx","endIdx","droppableId","provided","ref","innerRef","droppableProps","note","idx","draggableId","draggableProps","dragHandleProps","content","DELETE_NOTE","personId","noteId","newNote","uuidv4","Date","ADD_NOTE","isoDateFormat","isIsoDateString","test","parseDates","obj","Object","entries","key","init","initialVal","data","localStorage","getItem","parsedData","JSON","parse","peopleReducer","produce","draftState","newPerson","push","findIndex","p","splice","find","noteIdx","n","removed","App","useReducer","query","setQuery","useEffect","setItem","stringify","filteredPeople","Fuse","keys","threshold","search","item","debouncedOnSearch","useRef","debounce","current","to","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.080f1461.chunk.js","sourcesContent":["import Fuse from 'fuse.js';\nimport produce from 'immer';\nimport { debounce } from 'lodash';\nimport {\n  ChangeEvent,\n  useEffect,\n  useRef,\n  useState,\n  useReducer,\n } from 'react';\n import {\n  HashRouter as Router,\n  Link,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.scss';\nimport { Cards } from './cards';\nimport { Person } from './types';\nimport { parseDates } from './util';\n\nexport enum PeopleActionType {\n  ADD_PERSON = 'ADD_PERSON',\n  DELETE_PERSON = 'DELETE_PERSON',\n  ADD_NOTE = 'ADD_NOTE',\n  DELETE_NOTE = 'DELETE_NOTE',\n  REORDER_NOTES = 'REORDER_NOTES',\n  // UPLOAD_PEOPLE = 'UPLOAD_PEOPLE',\n}\n\nexport interface PeopleAction {\n  type: PeopleActionType;\n  payload?: any;\n}\n\nfunction init(initialVal: Person[]): Person[] {\n  const data = localStorage.getItem('data');\n  if (data !== null) {\n    const parsedData = JSON.parse(data);\n    parseDates(parsedData);\n    return parsedData;\n  }\n  return initialVal;\n}\n\nfunction peopleReducer(people: Person[], { type, payload }: PeopleAction): Person[] {\n  switch (type) {\n    case PeopleActionType.ADD_PERSON:\n      return produce(people, draftState => {\n        const newPerson: Person = {\n          id: uuidv4(),\n          name: payload.name,\n          notes: [],\n          createdDate: new Date(),\n        };\n        draftState.push(newPerson);\n      });\n    case PeopleActionType.DELETE_PERSON:\n      return produce(people, draftState => {\n        const idx = draftState.findIndex(p => p.id === payload.id);\n        draftState.splice(idx, 1);\n      });\n    case PeopleActionType.ADD_NOTE:\n      return produce(people, draftState => {\n        const person = draftState.find(p => p.id === payload.id);\n        person?.notes.push(payload.note);\n      });\n    case PeopleActionType.DELETE_NOTE:\n      return produce(people, draftState => {\n        const person = draftState.find(p => p.id === payload.personId);\n        const noteIdx = person?.notes?.findIndex(n => n.id === payload.noteId);\n        person?.notes?.splice(noteIdx!, 1);\n      });\n    case PeopleActionType.REORDER_NOTES:\n      return produce(people, draftState => {\n        const person = draftState.find(p => p.id === payload.id);\n        const [removed] = person?.notes.splice(payload.startIdx, 1)!;\n        person?.notes.splice(payload.endIdx, 0, removed);\n      });\n    default:\n      return people;\n  }\n}\n\nfunction App() {\n\n  const [people, peopleDispatch] = useReducer(peopleReducer, [], init);\n  const [query, setQuery] = useState<string>('');\n  const hasQuery = query.trim().length > 0;\n\n  useEffect(() => {\n    localStorage.setItem('data', JSON.stringify(people));\n  }, [people]);\n\n  const filteredPeople: Person[] = query\n    ? new Fuse(people, {\n        keys: ['name', 'notes.content'],\n        threshold: 0.4,\n      })\n      .search(query)\n      .map(result => result.item)\n    : people;\n\n  const onSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    setQuery(e?.target?.value);\n  }\n  const debouncedOnSearch = useRef(\n    debounce(onSearch, 150)\n  ).current;\n\n  // const onDataUpload = (e: ChangeEvent<HTMLInputElement>) => {\n  //   const [file] = e.target.files!;\n  //   const reader = new FileReader();\n  //   reader.readAsText(file);\n  //   reader.onload = (e: ProgressEvent<FileReader>) => {\n  //     console.log(e.target?.result);\n  //   };\n  // }\n\n  return (\n    <>\n      <div id=\"search-container\">\n        <svg\n          id=\"search-icon\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className={`h-6 w-6 ${hasQuery ? 'active' : ''}`}\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke={hasQuery ? '#0095ffcc' : 'black'}\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={3}\n            d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n          />\n        </svg>\n        <input\n          id=\"search-input\"\n          type=\"text\"\n          placeholder=\"Search by name, note\"\n          onChange={debouncedOnSearch}\n        />\n      </div>\n      <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to='/cards'>Cards</Link>\n            </li>\n            <li>\n              <Link to='/graph'>Graph</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path='/cards'>\n            <Cards\n              people={filteredPeople}\n              hasQuery={hasQuery}\n              peopleDispatch={peopleDispatch}\n            >\n            </Cards>\n          </Route>\n          <Route path='/graph'>\n            <div>under construction :3</div>\n          </Route>\n          <Route exact path='/'>\n            <Redirect to=\"/cards\" />\n          </Route>\n        </Switch>\n      </Router>\n      {/* <a\n        style={{ marginTop: 40, display: 'block' }}\n        href={`data:text/json;charset=utf-8,${encodeURIComponent(\n          JSON.stringify(people, null, 2)\n        )}`}\n        download=\"people-data.json\"\n      >Export Data</a>\n      <input\n        style={{ marginTop: 20 }}\n        type=\"file\"\n        onChange={onDataUpload}\n      /> */}\n    </>\n  );\n}\n\nexport default App;\n","import { Dispatch, FC, useState } from 'react';\r\n\r\nimport { PeopleAction, PeopleActionType } from '../App';\r\nimport { Person } from '../types';\r\nimport { PersonCard } from '.';\r\n\r\nimport './Cards.scss';\r\n\r\ninterface CardsProps {\r\n  people: Person[];\r\n  hasQuery: boolean;\r\n  peopleDispatch: Dispatch<PeopleAction>;\r\n} \r\n\r\nconst Cards: FC<CardsProps> = ({ people, hasQuery, peopleDispatch }: CardsProps) => {\r\n\r\n  const [personInputValue, setPersonInputValue] = useState<string>('');\r\n\r\n  const onAddPerson = () => {\r\n    const name = personInputValue.trim();\r\n    if (name) {\r\n      peopleDispatch({\r\n        type: PeopleActionType.ADD_PERSON,\r\n        payload: { name },\r\n      });\r\n      setPersonInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"person-cards-container\">\r\n        {people.length > 0\r\n          ? people.map((person: Person) => {\r\n            return <PersonCard\r\n              key={person.id}\r\n              person={person}\r\n              peopleDispatch={peopleDispatch}\r\n            />\r\n          })\r\n          : hasQuery\r\n            ? <div className=\"no-people-placeholder\">We didn't find anything</div>\r\n            : <div className=\"no-people-placeholder\">Add a new person!</div>\r\n        }\r\n      </div>\r\n      <form id=\"add-person-line\">\r\n        <input\r\n          id=\"add-person-input\"\r\n          type=\"text\"\r\n          placeholder=\"Enter a name\"\r\n          value={personInputValue}\r\n          onChange={e => setPersonInputValue(e.target.value)}\r\n        />\r\n        <button \r\n          id=\"add-person-button\"\r\n          type=\"submit\"\r\n          onClick={onAddPerson}\r\n          disabled={personInputValue.trim().length === 0}\r\n          title=\"Add Person\"\r\n        >+ Person</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport { Cards };","import { format } from 'date-fns'; \r\nimport { Dispatch, FC, useState } from 'react';\r\nimport { DragDropContext, Draggable, Droppable, DropResult } from \"react-beautiful-dnd\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { PeopleAction, PeopleActionType } from '../App';\r\nimport { Note, Person } from '../types';\r\n\r\nimport './PersonCard.scss';\r\n\r\ninterface PersonCardProps {\r\n  person: Person;\r\n  peopleDispatch: Dispatch<PeopleAction>;\r\n} \r\n\r\nconst PersonCard: FC<PersonCardProps> = ({ person, peopleDispatch }: PersonCardProps) => {\r\n\r\n  const [inputValue, setInputValue] = useState<string>('');\r\n\r\n  const onAddNote = () => {\r\n    const content = inputValue.trim();\r\n    if (content) {\r\n      const newNote: Note = {\r\n        id: uuidv4(),\r\n        content,\r\n        createdDate: new Date(),\r\n      };\r\n      peopleDispatch({\r\n        type: PeopleActionType.ADD_NOTE,\r\n        payload: { id: person.id, note: newNote },\r\n      });\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    if (!result.destination) return;\r\n    if (result.destination.index === result.source.index) return;\r\n    peopleDispatch({\r\n      type: PeopleActionType.REORDER_NOTES,\r\n      payload: { id: person.id, startIdx: result.source.index, endIdx: result.destination.index },\r\n    });\r\n  };\r\n\r\n  return(\r\n    <div className=\"person-card\">\r\n      <div className=\"name-section\">\r\n        <div\r\n          className=\"name-text\"\r\n          title={format(person.createdDate, \"MM/dd/yyyy hh:mm aaaaa'm\")}\r\n        >{person.name}</div>\r\n        <div\r\n          className=\"delete-person-button\"\r\n          title=\"Delete person card\"\r\n          onClick={() => peopleDispatch({\r\n            type: PeopleActionType.DELETE_PERSON,\r\n            payload: { id: person.id },\r\n          })}\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className=\"h-6 w-6 delete-person-icon\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"#444\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M6 18L18 6M6 6l12 12\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      {person.notes.length\r\n        ? <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId={person.id}>\r\n            {provided => (\r\n              <div\r\n                className=\"notes\"\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n              >\r\n                {person.notes.map((note: Note, idx: number) => {\r\n                  return (\r\n                    <Draggable\r\n                      key={note.id}\r\n                      draggableId={note.id}\r\n                      index={idx}\r\n                    >\r\n                      {provided => (\r\n                        <div\r\n                          className=\"note\"\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                        >\r\n                          <div\r\n                            className=\"note-text\"\r\n                            title={format(note.createdDate, \"MM/dd/yyyy hh:mm aaaaa'm\")}\r\n                          >{note.content}</div>\r\n                          <div className=\"delete-note-button-container\">\r\n                            <div\r\n                              className=\"delete-note-button\"\r\n                              title=\"Delete note\"\r\n                              onClick={() => peopleDispatch({\r\n                                type: PeopleActionType.DELETE_NOTE,\r\n                                payload: { personId: person.id, noteId: note.id },\r\n                              })}\r\n                            >\r\n                              <svg\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                className=\"h-6 w-6 delete-note-icon\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                stroke=\"#444\"\r\n                              >\r\n                                <path\r\n                                  strokeLinecap=\"round\"\r\n                                  strokeLinejoin=\"round\"\r\n                                  strokeWidth={2}\r\n                                  d=\"M6 18L18 6M6 6l12 12\"\r\n                                />\r\n                              </svg>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  );\r\n                })}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n        : <div className=\"notes\">\r\n          <div className=\"no-notes-placeholder\">You have no notes for this person</div>\r\n        </div> \r\n      }\r\n      <form className=\"note-input-section\">\r\n        <input\r\n          className=\"note-input\"\r\n          type=\"text\"\r\n          placeholder=\"Write a note\"\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"add-note-button\"\r\n          type=\"submit\"\r\n          onClick={onAddNote}\r\n          disabled={inputValue.trim().length === 0}\r\n          title=\"Add note\"\r\n        >+ Note</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport { PersonCard };","const isoDateFormat = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[-+]\\d{2}:?\\d{2}|Z)?$/;\r\n\r\nfunction isIsoDateString(value: any): boolean {\r\n  return value\r\n    && typeof(value) === 'string'\r\n    && isoDateFormat.test(value);\r\n}\r\n\r\nexport function parseDates(obj: any) {\r\n  for (const [key, value] of Object.entries(obj)) {\r\n    if (isIsoDateString(value)) {\r\n      obj[key] = new Date(value as string);\r\n    }\r\n    if (typeof(value) === 'object') {\r\n      parseDates(value);\r\n    }\r\n  }\r\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}